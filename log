Test sur fichier town10.txt avec 3 couleurs
10
Base de clause utilise  30  variables et contient les clauses suivantes : 
[1, 2, 3]
[-1, -2]
[-1, -3]
[-2, -3]
[4, 5, 6]
[-4, -5]
[-4, -6]
[-5, -6]
[7, 8, 9]
[-7, -8]
[-7, -9]
[-8, -9]
[10, 11, 12]
[-10, -11]
[-10, -12]
[-11, -12]
[13, 14, 15]
[-13, -14]
[-13, -15]
[-14, -15]
[16, 17, 18]
[-16, -17]
[-16, -18]
[-17, -18]
[19, 20, 21]
[-19, -20]
[-19, -21]
[-20, -21]
[22, 23, 24]
[-22, -23]
[-22, -24]
[-23, -24]
[25, 26, 27]
[-25, -26]
[-25, -27]
[-26, -27]
[28, 29, 30]
[-28, -29]
[-28, -30]
[-29, -30]
[-1, -4]
[-2, -5]
[-3, -6]
[-1, -7]
[-2, -8]
[-3, -9]
[-4, -10]
[-5, -11]
[-6, -12]
[-4, -13]
[-5, -14]
[-6, -15]
[-7, -10]
[-8, -11]
[-9, -12]
[-7, -16]
[-8, -17]
[-9, -18]
[-10, -13]
[-11, -14]
[-12, -15]
[-10, -19]
[-11, -20]
[-12, -21]
[-13, -16]
[-14, -17]
[-15, -18]
[-13, -25]
[-14, -26]
[-15, -27]
[-16, -19]
[-17, -20]
[-18, -21]
[-19, -22]
[-20, -23]
[-21, -24]
[-19, -25]
[-20, -26]
[-21, -27]
[-22, -25]
[-23, -26]
[-24, -27]
[-22, -28]
[-23, -29]
[-24, -30]
[-25, -28]
[-26, -29]
[-27, -30]
Resultat obtenu (on attend True) : True
Test sur fichier town10.txt avec 2 couleurs
Base de clause utilise  20  variables et contient les clauses suivantes : 
[1, 2]
[-1, -2]
[3, 4]
[-3, -4]
[5, 6]
[-5, -6]
[7, 8]
[-7, -8]
[9, 10]
[-9, -10]
[11, 12]
[-11, -12]
[13, 14]
[-13, -14]
[15, 16]
[-15, -16]
[17, 18]
[-17, -18]
[19, 20]
[-19, -20]
[-1, -3]
[-2, -4]
[-1, -5]
[-2, -6]
[-3, -7]
[-4, -8]
[-3, -9]
[-4, -10]
[-5, -7]
[-6, -8]
[-5, -11]
[-6, -12]
[-7, -9]
[-8, -10]
[-7, -13]
[-8, -14]
[-9, -11]
[-10, -12]
[-9, -17]
[-10, -18]
[-11, -13]
[-12, -14]
[-13, -15]
[-14, -16]
[-13, -17]
[-14, -18]
[-15, -17]
[-16, -18]
[-15, -19]
[-16, -20]
[-17, -19]
[-18, -20]
Resultat obtenu (on attend False) : False
Test sur fichier town10.txt avec 4 couleurs
Base de clause utilise  40  variables et contient les clauses suivantes : 
[1, 2, 3, 4]
[-1, -2]
[-1, -3]
[-1, -4]
[-2, -3]
[-2, -4]
[-3, -4]
[5, 6, 7, 8]
[-5, -6]
[-5, -7]
[-5, -8]
[-6, -7]
[-6, -8]
[-7, -8]
[9, 10, 11, 12]
[-9, -10]
[-9, -11]
[-9, -12]
[-10, -11]
[-10, -12]
[-11, -12]
[13, 14, 15, 16]
[-13, -14]
[-13, -15]
[-13, -16]
[-14, -15]
[-14, -16]
[-15, -16]
[17, 18, 19, 20]
[-17, -18]
[-17, -19]
[-17, -20]
[-18, -19]
[-18, -20]
[-19, -20]
[21, 22, 23, 24]
[-21, -22]
[-21, -23]
[-21, -24]
[-22, -23]
[-22, -24]
[-23, -24]
[25, 26, 27, 28]
[-25, -26]
[-25, -27]
[-25, -28]
[-26, -27]
[-26, -28]
[-27, -28]
[29, 30, 31, 32]
[-29, -30]
[-29, -31]
[-29, -32]
[-30, -31]
[-30, -32]
[-31, -32]
[33, 34, 35, 36]
[-33, -34]
[-33, -35]
[-33, -36]
[-34, -35]
[-34, -36]
[-35, -36]
[37, 38, 39, 40]
[-37, -38]
[-37, -39]
[-37, -40]
[-38, -39]
[-38, -40]
[-39, -40]
[-1, -5]
[-2, -6]
[-3, -7]
[-4, -8]
[-1, -9]
[-2, -10]
[-3, -11]
[-4, -12]
[-5, -13]
[-6, -14]
[-7, -15]
[-8, -16]
[-5, -17]
[-6, -18]
[-7, -19]
[-8, -20]
[-9, -13]
[-10, -14]
[-11, -15]
[-12, -16]
[-9, -21]
[-10, -22]
[-11, -23]
[-12, -24]
[-13, -17]
[-14, -18]
[-15, -19]
[-16, -20]
[-13, -25]
[-14, -26]
[-15, -27]
[-16, -28]
[-17, -21]
[-18, -22]
[-19, -23]
[-20, -24]
[-17, -33]
[-18, -34]
[-19, -35]
[-20, -36]
[-21, -25]
[-22, -26]
[-23, -27]
[-24, -28]
[-25, -29]
[-26, -30]
[-27, -31]
[-28, -32]
[-25, -33]
[-26, -34]
[-27, -35]
[-28, -36]
[-29, -33]
[-30, -34]
[-31, -35]
[-32, -36]
[-29, -37]
[-30, -38]
[-31, -39]
[-32, -40]
[-33, -37]
[-34, -38]
[-35, -39]
[-36, -40]
Resultat obtenu (on attend True) : True
Test sur fichier flat20_3_0.col avec 4 couleurs
20
Resultat obtenu (on attend True) : True
Test sur fichier flat20_3_0.col avec 3 couleurs
Resultat obtenu (on attend True) : True
Test sur fichier flat20_3_0.col avec 2 couleurs
Resultat obtenu (on attend False) : False
Test sur fichier jean.col avec 10 couleurs
80
Resultat obtenu (on attend True) : True
Test sur fichier jean.col avec 9 couleurs
Resultat obtenu (on attend False) : False
Test sur fichier jean.col avec 3 couleurs
Resultat obtenu (on attend False) : False
10
======== TEST CAS 1 10 villes de 0 a 9 : 

Chemin trouvé : 0 , 1 , 4 , 8 , 9
Longueur totale du chemin : 1190.971503412202
la lg du plus court chemin est  1190.971503412202
EtatCas1(position=9, target=9)
=======(nb d'etats explores = 7)========
=======(nb d'etats generes = 21)========

======== TEST CAS 1 10 villes de 5 a 9 : 

Chemin trouvé : 5 , 6 , 8 , 9
Longueur totale du chemin : 858.6177055898913
la lg du plus court chemin est  858.6177055898913
EtatCas1(position=9, target=9)
=======(nb d'etats explores = 5)========
=======(nb d'etats generes = 16)========

======== TEST CAS 1 10 villes de 2 a 9 : 

Chemin trouvé : 2 , 3 , 6 , 8 , 9
Longueur totale du chemin : 1090.639192762493
la lg du plus court chemin est  1090.639192762493
EtatCas1(position=9, target=9)
=======(nb d'etats explores = 10)========
=======(nb d'etats generes = 31)========

======== TEST CAS 1 10 villes de 1 a 7 : 

Chemin trouvé : 1 , 3 , 6 , 7
Longueur totale du chemin : 889.1949043390725
la lg du plus court chemin est  889.1949043390727
EtatCas1(position=7, target=7)
=======(nb d'etats explores = 5)========
=======(nb d'etats generes = 14)========

26
======== TEST CAS 1 26 villes de 0 a 25 : 

Chemin trouvé : 0 , 3 , 5 , 12 , 16 , 19 , 24 , 25
Longueur totale du chemin : 1856.5
la lg du plus court chemin est  1856.5
EtatCas1(position=25, target=25)
=======(nb d'etats explores = 20)========
=======(nb d'etats generes = 76)========

146
======== TEST CAS 1 146 villes de 0 a 145 : 

Chemin trouvé : 0 , 5 , 45 , 69 , 89 , 111 , 133 , 145
Longueur totale du chemin : 1143.0
la lg du plus court chemin est  1143.0000000000002
EtatCas1(position=145, target=145)
=======(nb d'etats explores = 150)========
=======(nb d'etats generes = 1327)========

998
======== TEST CAS 1 1000 villes : 

Chemin trouvé : 0 , 126 , 261 , 386 , 646 , 829 , 964 , 997
Longueur totale du chemin : 726.7000000000002
la lg du plus court chemin est  726.7
EtatCas1(position=997, target=997)
=======(nb d'etats explores = 1000)========
=======(nb d'etats generes = 44862)========

10
======== TEST CAS 2 10 villes de 0 a 9 : 

Chemin trouvé : 0 , 1 , 3 , 4 , 8 , 9 , 7 , 6 , 5 , 2 , 0
Longueur totale: 3792.1903620071935
la lg du plus court chemin est  3792.190362007193
EtatCas2(position=0, a_visiter=[])
=======(nb d'etats explores = 238)========
=======(nb d'etats generes = 274)========

6
======== TEST CAS 3 6 villes de 0 a 5 : 

Chemin trouvé : 0 , 1 , 2 , 3 , 5 , 4 , 0
Longueur totale: 0
la lg du plus court chemin est  1360.6495955560758
EtatCas2(position=0, a_visiter=[])
=======(nb d'etats explores = 82)========
=======(nb d'etats generes = 171)========

7
======== TEST CAS 3 7 villes de 0 a 6 : 

Chemin trouvé : 0 , 1 , 2 , 3 , 6 , 5 , 4 , 0
Longueur totale: 0
la lg du plus court chemin est  1638.459980067224
EtatCas2(position=0, a_visiter=[])
=======(nb d'etats explores = 194)========
=======(nb d'etats generes = 493)========

8
======== TEST CAS 3 8 villes de 0 a 7 : 

Chemin trouvé : 0 , 4 , 5 , 7 , 6 , 3 , 2 , 1 , 0
Longueur totale: 0
la lg du plus court chemin est  1729.6228205017967
EtatCas2(position=0, a_visiter=[])
=======(nb d'etats explores = 450)========
=======(nb d'etats generes = 1359)========

9
======== TEST CAS 3 9 villes de 0 a 8 : 

Chemin trouvé : 0 , 1 , 2 , 3 , 6 , 7 , 5 , 8 , 4 , 0
Longueur totale: 0
la lg du plus court chemin est  1855.2162397331167
EtatCas2(position=0, a_visiter=[])
=======(nb d'etats explores = 1026)========
=======(nb d'etats generes = 3601)========

10
======== TEST CAS 3 10 villes de 0 a 9 : 

Chemin trouvé : 0 , 1 , 2 , 3 , 6 , 7 , 5 , 8 , 9 , 4 , 0
Longueur totale: 1140.1716718008242
la lg du plus court chemin est  2026.2675322208256
EtatCas2(position=0, a_visiter=[])
=======(nb d'etats explores = 2306)========
=======(nb d'etats generes = 9235)========

11
======== TEST CAS 3 11 villes de 0 a 10 : 

Chemin trouvé : 0 , 2 , 10 , 6 , 9 , 3 , 4 , 7 , 1 , 8 , 5 , 0
Longueur totale: 0
la lg du plus court chemin est  2204.349308729841
EtatCas2(position=0, a_visiter=[])
=======(nb d'etats explores = 5161)========
=======(nb d'etats generes = 23181)========

10
======== Solver 1 pour 10 villes de 0 a 9 : 

HC avec plusieurs essais et tirage aleatoire d'une nelle solution pour chaque essai

La meilleure solution obtenue : Chemin optimal : 4 9 3 0 1 2 6 7 8 5 4
Valeur de la meilleure solution  2457.7026012435954=======(arret apres 100 essais : nb d'etats explores = 151)========


======== Solver 2 pour 10 villes de 0 a 9 : 

	 Il y a 90 tabou(s) :

La meilleure solution obtenue : Chemin optimal : 9 4 0 1 2 3 6 7 5 8 9
Valeur de la meilleure solution  2026.2675322208256=======(arret apres 100 essais : nb d'etats explores = 100)========

26

======== Solver 1 pour 26 villes de 0 a 25 : 

HC avec plusieurs essais et tirage aleatoire d'une nelle solution pour chaque essai

La meilleure solution obtenue : Chemin optimal : 0 19 13 24 21 17 20 9 2 5 6 23 25 14 15 3 8 18 11 7 16 10 22 12 1 4 0
Valeur de la meilleure solution  6531.491751827696=======(arret apres 100 essais : nb d'etats explores = 162)========


======== Solver 2 pour 26 villes de 0 a 25 : 

	 Il y a 69 tabou(s) :

La meilleure solution obtenue : Chemin optimal : 13 12 9 8 4 1 6 3 2 0 5 7 10 11 15 14 22 23 21 25 24 18 16 19 20 17 13
Valeur de la meilleure solution  2934.7357624947467=======(arret apres 100 essais : nb d'etats explores = 200)========

146

======== Solver 1 pour 150 villes : 

HC avec plusieurs essais et tirage aleatoire d'une nelle solution pour chaque essai

La meilleure solution obtenue : Chemin optimal : 100 55 6 102 76 63 94 32 108 21 3 38 23 51 121 22 25 115 75 111 64 36 8 139 130 145 84 89 42 116 79 17 92 140 120 104 123 90 142 53 56 126 103 67 60 48 45 143 15 54 24 132 85 33 99 12 105 5 28 1 70 86 83 58 141 135 117 9 131 107 88 87 72 40 43 122 95 81 77 65 112 41 27 136 13 137 113 69 96 66 80 129 26 101 2 20 30 73 50 61 114 10 59 68 109 71 46 0 11 127 37 110 106 98 62 124 35 7 93 133 138 16 14 128 119 91 78 118 125 31 4 82 134 57 18 44 49 74 52 29 19 47 34 97 39 144 100
Valeur de la meilleure solution  39458.59396866737=======(arret apres 100 essais : nb d'etats explores = 176)========


======== Solver 2 pour 150 villes : 

	 Il y a 0 tabou(s) :

La meilleure solution obtenue : Chemin optimal : 140 143 120 118 94 117 98 74 86 81 95 43 14 33 26 56 115 75 112 100 130 142 124 144 133 123 129 136 114 141 131 107 77 90 76 99 109 106 125 128 145 137 116 126 139 101 84 60 34 17 8 6 25 37 67 88 103 58 63 70 51 68 87 85 92 93 78 104 108 121 132 135 134 113 105 89 97 111 83 80 53 91 61 52 29 38 12 42 22 10 13 47 50 73 82 57 62 64 49 19 28 45 9 0 11 20 1 4 23 5 15 21 3 40 35 46 24 7 2 36 55 48 30 18 44 65 32 41 16 27 31 39 59 66 71 79 72 54 69 96 102 119 110 122 138 127 140
Valeur de la meilleure solution  11991.740518870456=======(arret apres 100 essais : nb d'etats explores = 300)========

998

======== Solver 1 pour 1000 villes : 

HC avec plusieurs essais et tirage aleatoire d'une nelle solution pour chaque essai

La meilleure solution obtenue : Chemin optimal
Valeur de la meilleure solution  277975.6214252969=======(arret apres 100 essais : nb d'etats explores = 197)========


======== Solver 2 pour 1000 villes : 

	 Il y a 0 tabou(s) :

La meilleure solution obtenue : Chemin optimal
Valeur de la meilleure solution  214327.79799395148=======(arret apres 100 essais : nb d'etats explores = 400)========


========== TEST  ==========
=============================
10

Test sur town10 avec 3 couleurs (on attend OK) :
======== OK avec 3 couleurs !
	 | 0 = 3 | 1 = 1 | 2 = 2 | 3 = 3 | 4 = 2 | 5 = 3 | 6 = 2 | 7 = 1 | 8 = 3 | 9 = 2 | 

Test sur town10 avec 2 couleurs (on attend NOK) :
======== NOK ! Pas de solution

Test sur town10 avec 4 couleurs (on attend OK) :
======== OK avec 4 couleurs !
	 | 0 = 4 | 1 = 2 | 2 = 3 | 3 = 4 | 4 = 3 | 5 = 4 | 6 = 3 | 7 = 2 | 8 = 4 | 9 = 3 | 
20
Test sur flat20_3_0.col avec 4 couleurs (on attend OK) :
======== OK avec 4 couleurs !
	 | 0 = 2 | 1 = 3 | 2 = 4 | 3 = 2 | 4 = 2 | 5 = 2 | 6 = 3 | 7 = 3 | 8 = 3 | 9 = 2 | 10 = 2 | 11 = 4 | 12 = 4 | 13 = 3 | 14 = 4 | 15 = 4 | 16 = 3 | 17 = 3 | 18 = 4 | 19 = 2 | 
Test sur flat20_3_0.col avec 3 couleurs (on attend OK) :
======== OK avec 3 couleurs !
	 | 0 = 1 | 1 = 2 | 2 = 3 | 3 = 1 | 4 = 1 | 5 = 1 | 6 = 2 | 7 = 2 | 8 = 2 | 9 = 1 | 10 = 1 | 11 = 3 | 12 = 3 | 13 = 2 | 14 = 3 | 15 = 3 | 16 = 2 | 17 = 2 | 18 = 3 | 19 = 1 | 
Test sur flat20_3_0.col avec 2 couleurs (on attend NOK) :
======== NOK ! Pas de solution
80
Test sur jean.col avec 10 couleurs (on attend OK) :
======== OK avec 10 couleurs !
	 | 0 = 10 | 1 = 8 | 2 = 9 | 3 = 8 | 4 = 7 | 5 = 6 | 6 = 5 | 7 = 10 | 8 = 7 | 9 = 9 | 10 = 10 | 11 = 10 | 12 = 10 | 13 = 9 | 14 = 8 | 15 = 10 | 16 = 8 | 17 = 10 | 18 = 4 | 19 = 6 | 20 = 10 | 21 = 5 | 22 = 10 | 23 = 10 | 24 = 8 | 25 = 10 | 26 = 7 | 27 = 8 | 28 = 7 | 29 = 7 | 30 = 9 | 31 = 10 | 32 = 10 | 33 = 10 | 34 = 5 | 35 = 10 | 36 = 10 | 37 = 3 | 38 = 4 | 39 = 6 | 40 = 10 | 41 = 8 | 42 = 9 | 43 = 6 | 44 = 9 | 45 = 7 | 46 = 3 | 47 = 9 | 48 = 10 | 49 = 3 | 50 = 10 | 51 = 10 | 52 = 9 | 53 = 10 | 54 = 4 | 55 = 9 | 56 = 7 | 57 = 3 | 58 = 9 | 59 = 8 | 60 = 9 | 61 = 9 | 62 = 5 | 63 = 7 | 64 = 10 | 65 = 6 | 66 = 9 | 67 = 2 | 68 = 4 | 69 = 9 | 70 = 10 | 71 = 9 | 72 = 3 | 73 = 10 | 74 = 7 | 75 = 10 | 76 = 6 | 77 = 8 | 78 = 1 | 79 = 10 | 
Test sur jean.col avec 3 couleurs (on attend NOK) :
======== NOK ! Pas de solution
Reading package lists...
Building dependency tree...
Reading state information...
libtbb-dev is already the newest version (2021.5.0-7ubuntu2).
0 upgraded, 0 newly installed, 0 to remove and 14 not upgraded.
Reading package lists...
Building dependency tree...
Reading state information...
libopenblas-base is already the newest version (0.3.20+ds-1).
0 upgraded, 0 newly installed, 0 to remove and 14 not upgraded.
Pour  6  villes  	 1360.64959555608
Pour  7  villes  	 1638.45998006722
Pour  8  villes  	 1729.6228205018
Pour  9  villes  	 1855.21623973312
Pour  10  villes  	 2026.26753222083
Pour  11  villes  	 2204.34930872984
Pour  12  villes  	 2231.43211218805
Pour  13  villes  	 2247.70309854912
Pour  14  villes  	 2311.70111550665
Pour  15  villes  	 2317.57076714782
Pour  16  villes  	 2353.80139215921
Pour  17  villes  	 2369.65704299013
Pour  18  villes  	 2376.85028163456
Pour  19  villes  	 None
l = (0,())
l = (0,(1-0.56 / ))
l = (0,(1-0.56 / 2-3.14 / ))
nom =  0 , x =  50 , y =  100
les fils =  [<projet.outils.Fils.Fils object at 0x7fc9aa1a0950>, <projet.outils.Fils.Fils object at 0x7fc9aa1a12e0>]
l = (0,(1-0.56 / 2-3.14 / ))
l = 0-0.85
nom =  0 , poids =  0.85
l = l2 (on attend True) True
l = l3 (on attend False) False
10
Cas 1 : le graphe contient des poids et des coordonnees :
Graphe avec 10 sommets : 
(0,(1-152.4958208392524 / 2-573.3892727429123 / ))
(1,(0-152.4958208392524 / 3-363.59836086392085 / 4-434.20493092217396 / ))
(2,(0-573.3892727429123 / 3-261.8141696487741 / 5-606.0328586233583 / ))
(3,(1-363.59836086392085 / 2-261.8141696487741 / 4-352.1646478273273 / 6-292.8455488797505 / ))
(4,(1-434.20493092217396 / 3-352.1646478273273 / 5-517.4834611627225 / 8-404.0056138131298 / ))
(5,(2-606.0328586233583 / 4-517.4834611627225 / 6-322.6382313559229 / ))
(6,(3-292.8455488797505 / 5-322.6382313559229 / 7-232.7509945954013 / 8-335.7143363963225 / ))
(7,(6-232.7509945954013 / 8-319.60520127786555 / 9-584.8494235083223 / ))
(8,(4-404.0056138131298 / 6-335.7143363963225 / 7-319.60520127786555 / 9-200.2651378376459 / ))
(9,(7-584.8494235083223 / 8-200.2651378376459 / ))

avec un poids min de (on attend 152.4958208392524) :152.4958208392524
26
Cas 1 : le graphe contient des poids et des coordonnees :
Graphe avec 26 sommets : 
(0,(1-543.6 / 2-317.7 / 3-553.5 / 4-689.9 / ))
(1,(0-543.6 / 4-60.6 / 7-319.8 / 8-99.8 / ))
(2,(0-317.7 / 6-272.2 / ))
(3,(0-553.5 / 5-170.8 / 6-131.9 / ))
(4,(0-689.9 / 1-60.6 / 6-166.7 / 8-88.4 / ))
(5,(3-170.8 / 6-366.8 / 7-224.5 / 12-320.2 / ))
(6,(2-272.2 / 3-131.9 / 4-166.7 / 5-366.8 / 7-238.4 / 11-262.5 / ))
(7,(1-319.8 / 5-224.5 / 6-238.4 / 10-79.8 / ))
(8,(1-99.8 / 4-88.4 / 9-282.5 / 11-289.2 / ))
(9,(8-282.5 / 10-162.9 / 15-356.4 / ))
(10,(7-79.8 / 9-162.9 / 11-116.0 / 14-221.6 / 15-244.0 / ))
(11,(6-262.5 / 8-289.2 / 10-116.0 / 13-458.0 / 15-328.8 / ))
(12,(5-320.2 / 16-93.0 / ))
(13,(11-458.0 / 16-253.2 / 18-646.1 / ))
(14,(10-221.6 / 15-77.1 / 20-504.4 / ))
(15,(9-356.4 / 10-244.0 / 11-328.8 / 14-77.1 / 17-490.8 / 20-604.7 / ))
(16,(12-93.0 / 13-253.2 / 19-174.7 / ))
(17,(15-490.8 / 19-129.0 / 22-589.7 / 23-687.1 / ))
(18,(13-646.1 / 20-493.7 / 22-224.1 / 24-190.4 / ))
(19,(16-174.7 / 17-129.0 / 21-576.9 / 24-435.9 / ))
(20,(14-504.4 / 15-604.7 / 18-493.7 / 23-361.2 / 24-562.7 / ))
(21,(19-576.9 / 22-132.1 / 24-16.3 / 25-173.2 / ))
(22,(17-589.7 / 18-224.1 / 21-132.1 / 23-145.7 / 25-269.0 / ))
(23,(17-687.1 / 20-361.2 / 22-145.7 / 24-103.6 / 25-285.7 / ))
(24,(18-190.4 / 19-435.9 / 20-562.7 / 21-16.3 / 23-103.6 / 25-108.4 / ))
(25,(21-173.2 / 22-269.0 / 23-285.7 / 24-108.4 / ))

avec un poids min de (on attend 16.3) :16.3
80
Cas 2 : le graphe ne contient pas de poids, ni de coordonnees :
Graphe avec 80 sommets : 
(0,(13-0 / ))
(1,(36-0 / 74-0 / 13-0 / ))
(2,(53-0 / 45-0 / 36-0 / 27-0 / 4-0 / 59-0 / 56-0 / 43-0 / 62-0 / 39-0 / 68-0 / 24-0 / 26-0 / 72-0 / 32-0 / ))
(3,(49-0 / 78-0 / 6-0 / 71-0 / 46-0 / 18-0 / 33-0 / 67-0 / 8-0 / 65-0 / ))
(4,(2-0 / 21-0 / 9-0 / 19-0 / 38-0 / 16-0 / 36-0 / 27-0 / ))
(5,(56-0 / 15-0 / 47-0 / 71-0 / 36-0 / 34-0 / 54-0 / 57-0 / 27-0 / ))
(6,(3-0 / 14-0 / 46-0 / 49-0 / 78-0 / 8-0 / 65-0 / 37-0 / 33-0 / 71-0 / 67-0 / 18-0 / ))
(7,(71-0 / 55-0 / ))
(8,(3-0 / 6-0 / 36-0 / 37-0 / 34-0 / 27-0 / 46-0 / 49-0 / 18-0 / 78-0 / 65-0 / 71-0 / 67-0 / 14-0 / 33-0 / ))
(9,(4-0 / 36-0 / 21-0 / 19-0 / 38-0 / 16-0 / ))
(10,(41-0 / 71-0 / ))
(11,(13-0 / ))
(12,(42-0 / ))
(13,(0-0 / 1-0 / 11-0 / 36-0 / 79-0 / 40-0 / 64-0 / 31-0 / 23-0 / 74-0 / ))
(14,(6-0 / 8-0 / 78-0 / 71-0 / 18-0 / 47-0 / 56-0 / 32-0 / 36-0 / 58-0 / 67-0 / 33-0 / 65-0 / 25-0 / 37-0 / 75-0 / 22-0 / 76-0 / 28-0 / ))
(15,(5-0 / 34-0 / 47-0 / 71-0 / 56-0 / 54-0 / 57-0 / ))
(16,(4-0 / 9-0 / 21-0 / 19-0 / 38-0 / 36-0 / ))
(17,(43-0 / 56-0 / 47-0 / ))
(18,(3-0 / 6-0 / 8-0 / 14-0 / 37-0 / 67-0 / 49-0 / 78-0 / 33-0 / 71-0 / 46-0 / 65-0 / ))
(19,(4-0 / 9-0 / 16-0 / 36-0 / 21-0 / 38-0 / ))
(20,())
(21,(4-0 / 9-0 / 16-0 / 19-0 / 36-0 / 38-0 / ))
(22,(14-0 / 76-0 / ))
(23,(13-0 / ))
(24,(2-0 / 62-0 / 39-0 / 68-0 / 26-0 / 72-0 / 32-0 / ))
(25,(14-0 / 58-0 / 76-0 / 28-0 / ))
(26,(2-0 / 24-0 / 62-0 / 39-0 / 68-0 / 72-0 / 32-0 / ))
(27,(2-0 / 4-0 / 5-0 / 8-0 / 29-0 / 58-0 / 71-0 / 34-0 / 54-0 / 43-0 / 57-0 / 63-0 / 56-0 / 45-0 / 30-0 / 36-0 / 42-0 / ))
(28,(14-0 / 25-0 / 36-0 / 58-0 / 76-0 / 35-0 / 44-0 / ))
(29,(27-0 / 36-0 / 58-0 / ))
(30,(27-0 / 36-0 / ))
(31,(13-0 / ))
(32,(2-0 / 14-0 / 24-0 / 26-0 / 58-0 / 62-0 / 39-0 / 68-0 / 72-0 / ))
(33,(3-0 / 6-0 / 8-0 / 14-0 / 18-0 / 46-0 / 49-0 / 78-0 / 47-0 / 37-0 / 71-0 / 67-0 / 65-0 / ))
(34,(5-0 / 8-0 / 15-0 / 27-0 / 47-0 / 43-0 / 36-0 / 54-0 / 57-0 / 56-0 / ))
(35,(28-0 / ))
(36,(1-0 / 2-0 / 4-0 / 5-0 / 8-0 / 9-0 / 13-0 / 14-0 / 16-0 / 19-0 / 21-0 / 27-0 / 28-0 / 29-0 / 30-0 / 34-0 / 76-0 / 65-0 / 71-0 / 54-0 / 57-0 / 77-0 / 63-0 / 56-0 / 43-0 / 58-0 / 38-0 / 60-0 / 45-0 / 42-0 / 52-0 / 69-0 / 74-0 / 66-0 / 59-0 / 61-0 / ))
(37,(6-0 / 8-0 / 14-0 / 18-0 / 33-0 / 78-0 / 71-0 / 65-0 / 67-0 / 47-0 / 51-0 / ))
(38,(4-0 / 9-0 / 16-0 / 19-0 / 21-0 / 36-0 / ))
(39,(2-0 / 24-0 / 26-0 / 32-0 / 62-0 / 68-0 / 72-0 / ))
(40,(13-0 / ))
(41,(10-0 / 71-0 / ))
(42,(12-0 / 27-0 / 36-0 / 77-0 / ))
(43,(2-0 / 17-0 / 27-0 / 34-0 / 36-0 / 73-0 / 54-0 / 57-0 / 47-0 / 58-0 / 56-0 / ))
(44,(28-0 / 75-0 / ))
(45,(2-0 / 27-0 / 36-0 / 53-0 / ))
(46,(3-0 / 6-0 / 8-0 / 18-0 / 33-0 / 71-0 / 65-0 / ))
(47,(5-0 / 14-0 / 15-0 / 17-0 / 33-0 / 34-0 / 37-0 / 43-0 / 54-0 / 57-0 / 56-0 / ))
(48,())
(49,(3-0 / 6-0 / 8-0 / 18-0 / 33-0 / 67-0 / 78-0 / 65-0 / 71-0 / ))
(50,(56-0 / ))
(51,(37-0 / ))
(52,(36-0 / ))
(53,(2-0 / 45-0 / ))
(54,(5-0 / 15-0 / 27-0 / 34-0 / 36-0 / 43-0 / 47-0 / 71-0 / 57-0 / 56-0 / ))
(55,(7-0 / ))
(56,(2-0 / 5-0 / 14-0 / 15-0 / 17-0 / 27-0 / 34-0 / 36-0 / 43-0 / 47-0 / 50-0 / 54-0 / 71-0 / 57-0 / 58-0 / 75-0 / ))
(57,(5-0 / 15-0 / 27-0 / 34-0 / 36-0 / 43-0 / 47-0 / 54-0 / 56-0 / 71-0 / ))
(58,(14-0 / 25-0 / 27-0 / 28-0 / 29-0 / 32-0 / 36-0 / 43-0 / 56-0 / 76-0 / 63-0 / ))
(59,(2-0 / 36-0 / ))
(60,(36-0 / ))
(61,(36-0 / ))
(62,(2-0 / 24-0 / 26-0 / 32-0 / 39-0 / 68-0 / 72-0 / ))
(63,(27-0 / 36-0 / 58-0 / ))
(64,(13-0 / ))
(65,(3-0 / 6-0 / 8-0 / 14-0 / 18-0 / 33-0 / 36-0 / 37-0 / 46-0 / 49-0 / 67-0 / 78-0 / 71-0 / ))
(66,(36-0 / ))
(67,(3-0 / 6-0 / 8-0 / 14-0 / 18-0 / 33-0 / 37-0 / 49-0 / 65-0 / 78-0 / 71-0 / ))
(68,(2-0 / 24-0 / 26-0 / 32-0 / 39-0 / 62-0 / 72-0 / ))
(69,(36-0 / ))
(70,())
(71,(3-0 / 5-0 / 6-0 / 7-0 / 8-0 / 10-0 / 14-0 / 15-0 / 18-0 / 27-0 / 33-0 / 36-0 / 37-0 / 41-0 / 46-0 / 49-0 / 54-0 / 56-0 / 57-0 / 65-0 / 67-0 / 78-0 / ))
(72,(2-0 / 24-0 / 26-0 / 32-0 / 39-0 / 62-0 / 68-0 / ))
(73,(43-0 / 76-0 / ))
(74,(1-0 / 13-0 / 36-0 / ))
(75,(14-0 / 44-0 / 56-0 / ))
(76,(14-0 / 22-0 / 25-0 / 28-0 / 36-0 / 58-0 / 73-0 / ))
(77,(36-0 / 42-0 / ))
(78,(3-0 / 6-0 / 8-0 / 14-0 / 18-0 / 33-0 / 37-0 / 49-0 / 65-0 / 67-0 / 71-0 / ))
(79,(13-0 / ))

20
Cas 2 : le graphe ne contient pas de poids, ni de coordonnees :
Graphe avec 20 sommets : 
(0,(1-0 / 2-0 / 6-0 / 8-0 / 12-0 / 14-0 / 16-0 / ))
(1,(0-0 / 4-0 / 5-0 / 9-0 / 11-0 / 12-0 / 14-0 / ))
(2,(0-0 / 7-0 / 10-0 / 16-0 / 17-0 / 19-0 / ))
(3,(8-0 / 11-0 / 12-0 / 13-0 / 14-0 / 17-0 / 18-0 / ))
(4,(1-0 / 7-0 / 11-0 / 14-0 / 15-0 / 18-0 / ))
(5,(1-0 / 6-0 / 8-0 / 12-0 / 15-0 / 16-0 / ))
(6,(0-0 / 5-0 / 9-0 / 10-0 / 11-0 / 12-0 / 14-0 / 18-0 / ))
(7,(2-0 / 4-0 / 9-0 / 12-0 / ))
(8,(0-0 / 3-0 / 5-0 / 9-0 / 14-0 / 18-0 / 19-0 / ))
(9,(1-0 / 6-0 / 7-0 / 8-0 / 11-0 / 14-0 / 16-0 / ))
(10,(2-0 / 6-0 / 12-0 / 13-0 / 15-0 / 17-0 / ))
(11,(1-0 / 3-0 / 4-0 / 6-0 / 9-0 / 16-0 / 17-0 / 19-0 / ))
(12,(0-0 / 1-0 / 3-0 / 5-0 / 6-0 / 7-0 / 10-0 / ))
(13,(3-0 / 10-0 / 14-0 / 15-0 / 18-0 / 19-0 / ))
(14,(0-0 / 1-0 / 3-0 / 4-0 / 6-0 / 8-0 / 9-0 / 13-0 / 16-0 / ))
(15,(4-0 / 5-0 / 10-0 / 13-0 / 16-0 / 17-0 / 19-0 / ))
(16,(0-0 / 2-0 / 5-0 / 9-0 / 11-0 / 14-0 / 15-0 / 19-0 / ))
(17,(2-0 / 3-0 / 10-0 / 11-0 / 15-0 / ))
(18,(3-0 / 4-0 / 6-0 / 8-0 / 13-0 / ))
(19,(2-0 / 8-0 / 11-0 / 13-0 / 15-0 / 16-0 / ))

